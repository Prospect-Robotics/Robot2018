// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2813.Robot2018.subsystems;

import org.usfirst.frc2813.Robot2018.RobotMap;
import org.usfirst.frc2813.Robot2018.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Sendable;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController speedController1 = RobotMap.driveTrainSpeedController1;
    private final SpeedController speedController2 = RobotMap.driveTrainSpeedController2;
    //private final SpeedController speedController3 = RobotMap.driveTrainSpeedController3;
    //private final SpeedController speedController4 = RobotMap.driveTrainSpeedController4;
    private final DifferentialDrive robotDrive = RobotMap.driveTrainRobotDrive;
    private final Encoder quadratureEncoder1 = RobotMap.driveTrainQuadratureEncoder1;
    private final Encoder quadratureEncoder2 = RobotMap.driveTrainQuadratureEncoder2;
    //private final Encoder quadratureEncoder3 = RobotMap.driveTrainQuadratureEncoder3;
    //private final Encoder quadratureEncoder4 = RobotMap.driveTrainQuadratureEncoder4;
    private final Solenoid solenoid1 = RobotMap.driveTrainSolenoid1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public DriveTrain() {
    	addChild(robotDrive);
    	addChild((Sendable) speedController1);
    	addChild((Sendable) speedController2);
    }
    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    public void arcadeDrive(Joystick joystick1) {
    	double z = joystick1.getX()+joystick1.getTwist();
    	double x = joystick1.getY();
    	robotDrive.arcadeDrive((x > 0 ? x*x : -x*x), z*z*z, false);
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

