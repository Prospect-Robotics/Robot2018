// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2813.Robot2018.subsystems;

import org.usfirst.frc2813.Robot2018.RobotMap;
import org.usfirst.frc2813.Robot2018.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.Encoder;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PWMVictorSPX;
import edu.wpi.first.wpilibj.SpeedController;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */


public class Intake extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS


	/*
	 *  Constants used by the Intake code
	 *  TODO:  figure out appropriate Enums for this
	 */
	public static final boolean INTAKE_IN = true;
	public static final boolean INTAKE_OUT = false;
	public static final int INTAKE_DIRECTION_MULTIPLIER_IN = -1;
	public static final int INTAKE_DIRECTION_MULTIPLIER_OUT = 1;
	public static final double INTAKE_SPEED_IN = 0.7;
	public static final double INTAKE_SPEED_OUT = 0.7;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public final SpeedController speedController1 = RobotMap.intakeSpeedController;
    //public final SpeedController speedController2 = RobotMap.intakeSpeedController2;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	//setDefaultCommand(new SpinIntake());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    public void spinDrive() {
    	
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }
    public void spin(boolean spinDirectionIn) {
    	if (spinDirectionIn == true) {		// Spin direction is IN
    		speedController1.set(INTAKE_DIRECTION_MULTIPLIER_IN * INTAKE_SPEED_IN);			// NOTE:  2nd speed controller is slaved to this one in RobotMap
    	} else {							// Spin direction is OUT
    		speedController1.set(INTAKE_DIRECTION_MULTIPLIER_OUT * INTAKE_SPEED_OUT);		// NOTE:  2nd speed controller is slaved to this one in RobotMap
    	}
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

