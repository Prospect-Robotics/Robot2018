// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2813.Robot2018.commands.Arm;
import edu.wpi.first.wpilibj.command.Command;

import org.usfirst.frc2813.Robot2018.Direction;
import org.usfirst.frc2813.Robot2018.Robot;
import org.usfirst.frc2813.Robot2018.subsystems.Arm;

/**
 * Move or maintain arm position.
 */
public class MoveArm extends Command {
	private boolean halted;
	private Direction direction;

	public MoveArm() {
		halted = true;
		requires(Robot.arm);
	}
	public MoveArm(Direction direction) {
		Arm.setArmDirection(direction);
		this.direction = direction;
		halted = false;
	}

	// Called just before this Command runs the first time
	//@Override
	protected void initialize() {
		Arm.haltArm();
	}

	// Called repeatedly when this Command is scheduled to run
	//@Override
	protected void execute() {
		if (halted) {
			Arm.haltArm();
		}
		else {
			Arm.moveArm();
		}
	}

	// Make this return true when this Command no longer needs to run execute()
	//@Override
	protected boolean isFinished() {
		double current_position, end_position, tmp;
		if (halted) {
			return true;
		}
		current_position = Arm.readArmPosition();
		end_position = Arm.readArmEndPosition();
		
		// swap so we can do one compare
		if (direction == Direction.DOWN) {
			tmp = current_position;
			current_position = end_position;
			end_position = tmp;
		}
		if (current_position >= end_position) {
			halted = true;
			Arm.haltArm();
			return true;
		}
		return false;
	}

	@Override
	protected void end() {}

	@Override
	protected void interrupted() {}
}